"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
}
Object.defineProperty(exports, "__esModule", { value: true });
const url_1 = require("url");
const isomorphic_fetch_1 = __importDefault(require("isomorphic-fetch"));
function fetchFromUrl(url) {
    return __awaiter(this, void 0, void 0, function* () {
        const fetched = yield isomorphic_fetch_1.default(url);
        const json = yield fetched.text();
        return JSON.parse(json);
    });
}
const resources = [
    'actors',
    'addresses',
    'categories',
    'cities',
    'countries',
    'customers',
    'films',
    'languages',
    'staff',
    'stores'
];
const cache = {};
function addToCache(url, result) {
    const normalizedUrl = new url_1.URL(url).toString();
    cache[normalizedUrl] = result;
}
function cacheResource(resourceName) {
    return __awaiter(this, void 0, void 0, function* () {
        let url = `http://localhost:8000/api/${resourceName}/`;
        do {
            const response = yield fetchFromUrl(url);
            addToCache(url, response);
            for (const obj of response.results || []) {
                addToCache(obj.url, obj);
            }
            url = response.next;
        } while (url !== null);
    });
}
Promise.all(resources.map(cacheResource))
    .then(() => {
    console.log(`
            /*eslint-disable */
            /* Generated by combine.js */
            // prettier-ignore
            var data = {
                ${Object.keys(cache)
        .map(url => `${url}: ${JSON.stringify(cache[url])}`)
        .join(',\n')}
            };
            module.exports = data;
        `);
})
    .catch(function (err) {
    console.error(err);
});
